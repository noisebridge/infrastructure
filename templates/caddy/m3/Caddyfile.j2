{{ ansible_managed | comment }}
# Global settings
{
  order cgi last
  order authenticate before respond
  order authorize before basic_auth
  security {
    authorization policy noisebridge-github {
      set auth url https://auth.noisebridge.net/auth
      crypto key verify {{ noisebridge_jwt_token_secret }}
      crypto key token name access_token
      allow roles members rack
    }
  }
  servers {
      metrics
  }
}
# Metrics server
{{ ansible_fqdn }} {
  route /metrics {
    basic_auth {
      prometheus {{ noisebridge_prometheus_password_hash }}
    }
    metrics
  }
  handle_path /coredns/* {
    basic_auth {
      prometheus {{ noisebridge_prometheus_password_hash }}
    }
    reverse_proxy localhost:9153
  }
  respond "Noisebridge Infrastructure - {{ ansible_fqdn }}"
}

# Redirects to www.noisebride.net
noisebridge.com, www.noisebridge.com {
  log {
    output file "{{ caddy_log_dir }}/noisebridge.com.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
  redir https://www.noisebridge.net{uri}
}

noisebridge.io, www.noisebridge.io {
  log {
    output file "{{ caddy_log_dir }}/noisebridge.io.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
  redir https://www.noisebridge.net{uri}
}

noisebridge.net {
  log {
    output file "{{ caddy_log_dir }}/noisebridge.net.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
  redir https://www.noisebridge.net{uri}
}

noisebridge.org, www.noisebridge.org {
  log {
    output file "{{ caddy_log_dir }}/noisebridge.org.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
  redir https://www.noisebridge.net{uri}
}

# Mediawiki
www.noisebridge.net {
  log {
    output file "{{ caddy_log_dir }}/www.noisebridge.net.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
{{ noisebridge_caddy_secure_header | indent(width=2) }}

  @claudebot {
    header User-Agent *ClaudeBot*
  }
  respond @claudebot 403

  route /images* {
    uri strip_prefix /images
    file_server {
      root /srv/mediawiki/noisebridge.net/images
    }
  }
  route /img* {
    uri strip_prefix /images
    file_server {
      root /srv/mediawiki/noisebridge.net/img
    }
  }
  root * /srv/mediawiki/noisebridge.net-1.39.13
  php_fastcgi unix//run/php/php8.2-fpm.sock
  file_server {
    hide *.php
  }

  @favicon path /favicon.ico
  handle @favicon {
    file_server {
      root /srv/mediawiki/noisebridge.net/img
    }
  }
  
  route /adminer* {
    authorize with noisebridge-github
    root * /srv/adminer
    try_files {path} adminer.php
  }

  # Legacy mailman redirects
  redir /pipermail https://lists.noisebridge.net{uri}
  redir /mailman https://lists.noisebridge.net{uri}

  rewrite / /index.php?title={path}
  redir / /wiki
}

# Mailman
lists.noisebridge.net {
  log {
    output file "{{ caddy_log_dir }}/lists.noisebridge.net.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
{{ noisebridge_caddy_secure_header | indent(width=2) }}

{% for cgi in noisebridge_mailman_cgi_scripts %}
  cgi /{{ cgi }}* /var/lib/mailman/cgi-bin/{{ cgi }} {
    script_name /{{ cgi }}
  }
{% endfor %}

  route /images/mailman* {
    uri strip_prefix /images/mailman
    file_server {
      root /usr/share/images/mailman
    }
  }
  route /pipermail* {
    uri strip_prefix /pipermail
    file_server {
      root /var/lib/mailman/archives/public
    }
  }

  redir / /listinfo
  rewrite /mailman /{uri}
}

# Safespace
safespace.noisebridge.net {
  log {
    output file "{{ caddy_log_dir }}/spafespace.noisebridge.net.log" {
{{ noisebridge_caddy_log_roll | indent(width=6) }}
    }
{{ noisebridge_caddy_log_filter | indent(width=4) }}
  }
{{ noisebridge_caddy_secure_header | indent(width=2) }}
  root * /var/www/safespace.noisebridge.net
  php_fastcgi unix//run/php/php7.4-fpm.sock
}

# Monitoring
prometheus.noisebridge.net {
  route {
    authorize with noisebridge-github
    reverse_proxy localhost:9090
  }
}

https:// {
  tls internal
  respond 400 {
    body "Host header not valid"
    close
  }
}
